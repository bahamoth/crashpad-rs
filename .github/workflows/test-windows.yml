name: Test Windows

on:
  pull_request:

permissions:
  pull-requests: write

concurrency:
  group: windows-${{ github.ref }}
  cancel-in-progress: true

jobs:
  windows:
    if: github.actor != 'release-please[bot]'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 'stable'
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Setup Python for Windows depot_tools
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        shell: bash
        run: |
          cargo xtask install-tools
      
      - name: Windows Build
        shell: bash
        run: |
          cargo build --package crashpad-rs-sys --features vendored-depot
          cargo build --package crashpad-rs
      
      - name: Run tests
        shell: bash
        run: |
          cargo nextest run --profile ci
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-windows
          path: target/nextest/ci/junit.xml
          retention-days: 7
      
      - name: Test Report
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: target/nextest/ci/junit.xml
          check_name: Windows Test Results
          comment: true
          update_check: true
          annotate_only: false
          detailed_summary: true
          include_passed: true
      
      - name: Generate Test Summary
        if: always()
        shell: bash
        run: |
          echo "## 🪟 Windows Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check if JUnit file exists and parse it
          if [ -f "target/nextest/ci/junit.xml" ]; then
            # Simple parsing of JUnit XML for summary
            TESTS=$(grep -c '<testcase' target/nextest/ci/junit.xml || echo "0")
            FAILURES=$(grep -c '<failure' target/nextest/ci/junit.xml || echo "0")
            ERRORS=$(grep -c '<error' target/nextest/ci/junit.xml || echo "0")
            PASSED=$((TESTS - FAILURES - ERRORS))
          
            echo "### Test Results" >> $GITHUB_STEP_SUMMARY
            echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
            echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| Total Tests | $TESTS |" >> $GITHUB_STEP_SUMMARY
            echo "| Passed | ✅ $PASSED |" >> $GITHUB_STEP_SUMMARY
            echo "| Failed | ❌ $FAILURES |" >> $GITHUB_STEP_SUMMARY
            echo "| Errors | ⚠️ $ERRORS |" >> $GITHUB_STEP_SUMMARY
          else
            echo "### Test Results" >> $GITHUB_STEP_SUMMARY
            echo "No test results file found (JUnit XML)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform**: Windows" >> $GITHUB_STEP_SUMMARY
          echo "- **Architecture**: x86_64" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Strategy**: vendored-depot" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Runner**: cargo-nextest" >> $GITHUB_STEP_SUMMARY
          echo "- **Output Format**: JUnit XML" >> $GITHUB_STEP_SUMMARY